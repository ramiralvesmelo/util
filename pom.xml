<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath />
	</parent>

	<groupId>br.com.ramiralvesmelo</groupId>
	<artifactId>util</artifactId>
	<version>1.4.0</version>
	<packaging>jar</packaging>

	<name>util</name>
	<url>http://maven.apache.org</url>
	<description>Biblioteca utilitária com classes reutilizáveis</description>

	<properties>
		<java.version>21</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jacocoArgLine></jacocoArgLine>
		<jvm.add-opens>
			--add-opens java.base/java.lang=ALL-UNNAMED
			--add-opens java.base/java.util=ALL-UNNAMED
			--add-opens java.base/java.io=ALL-UNNAMED
			--add-opens java.base/java.net=ALL-UNNAMED
			--add-opens java.base/java.lang.reflect=ALL-UNNAMED
			--enable-native-access=ALL-UNNAMED
			-Djansi.mode=off
		</jvm.add-opens>
	</properties>
	<dependencies>

		<!-- H2 só para testes -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<!-- Remove JUnit Vintage (não precisa de JUnit 4/3) -->
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring Boot Starte Teste -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Mokito -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Starter Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- ULID Generator -->
		<dependency>
			<groupId>com.github.f4b6a3</groupId>
			<artifactId>ulid-creator</artifactId>
			<version>5.2.3</version>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.34</version> <!-- versão estável mais recente -->
			<scope>provided</scope>
		</dependency>

		<!-- Jackson Databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<!-- versão para Jakarta EE 10 -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- HttpComponents Core -->
		<dependency>
			<groupId>org.apache.httpcomponents.core5</groupId>
			<artifactId>httpcore5</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Suporte JOSE/JWT -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-jose</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- OWASP Encoder -->
		<dependency>
			<groupId>org.owasp.encoder</groupId>
			<artifactId>encoder</artifactId>
			<version>1.2.3</version>
			<optional>true</optional>
		</dependency>

		<!-- Apache Commons Validator (UrlValidator) -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.8.0</version>			
		</dependency>

	</dependencies>

	<!-- Repositório para consumir -->
	<repositories>
		<repository>
			<id>github-ramir-util</id>
			<url>https://maven.pkg.github.com/ramiralvesmelo/util</url>
		</repository>
	</repositories>

	<!-- Configuração para publicar -->
	<distributionManagement>
		<repository>
			<id>github-ramir-util</id>
			<url>https://maven.pkg.github.com/ramiralvesmelo/util</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<!-- resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- compiler (apenas plugin e processor path; dependências
			intactas) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- compativel também com JDK 24-->
				<version>3.14.0</version>
				<configuration>
					<!-- usando Java 24 como exemplo -->
					<release>${maven.compiler.source}</release>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.38</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- JaCoCo injeta na propriedade jacocoArgLine -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.13</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- O plugin vai preencher ${jacocoArgLine} com o
							-javaagent -->
							<propertyName>jacocoArgLine</propertyName>
						</configuration>
					</execution>

					<!-- Gera target/site/jacoco/jacoco.xml -->
					<execution>
						<id>report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Surefire compõe: (jacoco) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- compativel também com JDK 24-->
				<version>3.5.3</version>
				<configuration>
					<!-- enviando agente jacoco -->
					<argLine>${jacocoArgLine} ${jvm.add-opens}</argLine>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<printSummary>brief</printSummary>
					<trimStackTrace>true</trimStackTrace>
					<forkCount>1</forkCount>
					<reuseForks>true</reuseForks>
				</configuration>
			</plugin>

			<!-- CycloneDX Maven Plugin -->
			<plugin>
				<groupId>org.cyclonedx</groupId>
				<artifactId>cyclonedx-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>makeAggregateBom</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Deploy -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>3.1.1</version>
			</plugin>
		</plugins>
	</build>

</project>
